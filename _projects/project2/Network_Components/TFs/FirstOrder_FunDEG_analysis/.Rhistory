f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$gene,FOC$gene,SOC$gene)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$gene))
y<-length(intersect(i,breastDO$gene))
z<-length(intersect(i,CL$gene))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
# ggsave("../../../../_assets/images_proj2/weightedsums_plusTABLE.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/weightedsums.png", g1, "png")
ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
weightedsums[2,1]<-'First order FunDEGs'
weightedsums[3,1]<-'Second order FunDEGs'
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
# Get list of CL genes in SOC and FOC:
Cl_in_SOC <- as.data.frame(intersect(SOC$gene, CL$gene))
#126
HOC_in_SOC <- as.data.frame(intersect(SOC$gene, HOC$gene))
# 7: "CAV1"  "CDC20" "DSP"   "ERBB2" "KRT8"  "PTTG1" "VIM"
Cl_in_FOC <- as.data.frame(intersect(FOC$gene, CL$gene))
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$gene, HOC$gene))
#24: "ADAM9"  "ATF3"   "EGFR"   "FBLN1"  "FN1"    "FYN"    "GSN"    "HMGA2"  "ICAM1"  "IGF1R"  "IL4R"   "ITGB8"  "LIMK2"  "LRP1"   "MAPK13" "ROCK1"
# "SHC1"   "SMAD4"  "TBL1X"  "TGFA"   "TGFB1"  "TNK2"   "TP53"   "VIM"
BDO_in_FOC <- as.data.frame(intersect(FOC$gene, breastDO$gene))
View(BDO_in_FOC)
View(Cl_in_FOC)
View(HOC_in_FOC)
BDO_in_SOC <- as.data.frame(intersect(SOC$gene, breastDO$gene))
intersect(SOC$gene, CL$gene)
intersect(FOC$gene, CL$gene)
intersect(SOC$gene, HOC$gene)
intersect(FOC$gene, HOC$gene)
?read.table
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.table("TFs_APIPA_500.txt", header = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs/First Order FunDEG analysis")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs/First Order FunDEG analysis")
#Input Files:
AP500<-read.table("TFs_APIPA_500.txt", header = TRUE)
#Input Files:
AP500<-read.table("TFs_APIPA_0500.txt", header = TRUE)
#Input Files:
AP500<-read.table("TFs_APIPA_0500.txt", header = TRUE, fill =TRUE)
View(AP500)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_500.csv", header = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
#Input Files:
AP500<-read.csv("TFs_APIPA_0500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
View(AP500)
#Lists we're comparing to:
HOC<- read.csv("../../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
## setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
## ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
ggsave("../../../../../_assets/images_proj2/TFs_weightedsums_graph_table_FOC.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
7/9/3+2/9/3
6/7/3+1/7/3
4/5/3+1/5/3
6/7/3+1/7/3
6/7/3 + 1/7/3
View(AP1000)
View(AP2000)
View(AP2500)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
ggsave("../../../../../_assets/images_proj2/TFs_weightedsums_graph_table_FOC.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
/root.dir
?root.dir
??root.dir
opts_knit$set(root.dir = '~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs')
getwd()
opts_knit$set(root.dir = 'C:/Users/gastonguay/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs')
knitr::opts_chunk$set(echo = TRUE)
opts_knit$set(root.dir = 'C:/Users/gastonguay/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs')
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
opts_knit$set(root.dir = 'C:/Users/gastonguay/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs')
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.txt') #read in TF binding profile
View(TF_Binding)
TF_Binding <- read.table('TFBS_9_pulldown.txt') #read in TF binding profile
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
View(TF_Binding)
TF_Binding(names)
names(TF_Binding)
names(TF_Binding)[,-c(1,2,3)]
names(TF_Binding)[-c(1,2,3)]
symbols <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
View(symbols)
# symbols <-read.table('TFs_TFID') #Read in TF IDs
symbols$V1 <- chartr("V$","V.", symbols$V1)
symbols <-read.table('TFs_TFID') #Read in TF IDs
View(symbols)
symbols2 <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
View(symbols2)
names(TF_Binding)
View(TF_Binding)
symbols$V1 <- chartr("V$","V.", symbols$V1)
typeof(symbols)
typeof(symbols2)
names(symbols2) <- "V1"
symbols2$V1 <- chartr("V$","V.", symbols$V1)
symbols2$V1 <- chartr("V$","V.", symbols2$V1)
symbols2 <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
names(symbols2) <- "V1"
symbols2$V1 <- chartr("V$","V.", symbols2$V1)
symbols <-read.table('TFs_TFID') #Read in TF IDs
symbols$V1 <- chartr("V$","V.", symbols$V1)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_7_pulldown.csv') #read in TF binding profile
symbols <-read.table('TFs_TFID') #Read in TF IDs
symbols$V1 <- chartr("V$","V.", symbols$V1)
View(symbols)
symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
?chartr
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
symbols2 <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
names(symbols2) <- "V1"
# symbols <-read.table('TFs_TFID') #Read in TF IDs
# symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt") #read in gene input list
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_FOC_LCC_noHKG_80") #read in gene input list
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$V1,] #modify dataframe
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
View(x)
View(input_gene_list)
View(TFBS_DF)
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
View(TF_relevant)
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_7_pulldown.csv') #read in TF binding profile
symbols <-read.table('TFs_TFID') #Read in TF IDs
symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt") #read in gene input list
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$V1,] #modify dataframe
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
View(TF_relevant)
library(readr)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
library(readr)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
library(readr)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction2/TFs to DEGs") #set working directory
library(readr)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction 2/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
symbols <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
names(symbols) <- "V1"
# symbols <-read.table('TFs_TFID') #Read in TF IDs
# symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_FOC_LCC_noHKG_80") #read in gene input list
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$V1,] #modify dataframe
#for (i in 1:nrow(Filter))
# if is.element(Filter$Gene.symbol[i], TF_relevant$ID)
#write.csv(TFBS_DF, "C:/Users/marazzi/Dropbox/Marazzi/Control_DynamicalSystems/Log/5/Cis_SOC_1000.csv")
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
#write.csv(TF_relevant, "C:/Users/marazzi/Dropbox/Marazzi/Control_DynamicalSystems/Log/5/Cis_SOC_colfilter.csv")
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
TFs_symbols_file<-read.csv('TFs_toTFID.csv')
TFs_symbols_file<-read.csv('TFs_toTFID.csv')
TFs_symbols<-TFs_symbols_file[,c('Gene.symbol','Site.model.ID')]
TFs_symbols_file<-read.csv('TFs_toTFID.csv')
TFs_symbols<-TFs_symbols_file[,c('Gene.symbol','Site.model.ID')]
TFs_symbols_file<-read.csv('TFs_toTFID.csv', col.names = c('Gene.symbol','Site.model.ID'))
TFs_symbols<-TFs_symbols_file[,c('Gene.symbol','Site.model.ID')]
TFs_symbols$Site.model.ID<-chartr("V$","V.", TFs_symbols$Site.model.ID)
colnames(TFs_symbols) <- c('symbol','TF')
total <- merge(TFs_symbols,TF_sites_DF,by=c("TF"))
totallower<-as.data.frame(sapply(total,tolower))
write.csv(total, "TF_toDEG_table.csv")
library(readr)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction 2/TFs to DEGs") #set working directory
TF_Binding <- read.csv('TFBS_9_pulldown.csv') #read in TF binding profile
symbols <- as.data.frame(names(TF_Binding)[-c(1,2,3)])
names(symbols) <- "V1"
# symbols <-read.table('TFs_TFID') #Read in TF IDs
# symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_FOC_LCC_noHKG_80") #read in gene input list
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$V1,] #modify dataframe
#for (i in 1:nrow(Filter))
# if is.element(Filter$Gene.symbol[i], TF_relevant$ID)
#write.csv(TFBS_DF, "C:/Users/marazzi/Dropbox/Marazzi/Control_DynamicalSystems/Log/5/Cis_SOC_1000.csv")
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
#write.csv(TF_relevant, "C:/Users/marazzi/Dropbox/Marazzi/Control_DynamicalSystems/Log/5/Cis_SOC_colfilter.csv")
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
TFs_symbols_file<-read.csv('TFs_toTFID.csv', col.names = c('Gene.symbol','Site.model.ID'))
TFs_symbols<-TFs_symbols_file[,c('Gene.symbol','Site.model.ID')]
TFs_symbols$Site.model.ID<-chartr("V$","V.", TFs_symbols$Site.model.ID)
colnames(TFs_symbols) <- c('symbol','TF')
total <- merge(TFs_symbols,TF_sites_DF,by=c("TF"))
totallower<-as.data.frame(sapply(total,tolower))
write.csv(total, "TF_toDEG_table.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
#Input Files:
AP500<-read.csv("TFs_APIPA_0500.csv", header = TRUE)
View(AP500)
AP500$Gene_Symbol
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_0500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
#Lists we're comparing to:
HOC<- read.csv("../../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
varlist
View(varlist)
varlist[[1]]
varlist[[2]]
varlist[[4]]
test <- data.frame(1 = NA)
test <- data.frame("1" = NA)
weightedsums %>% names() %>% length()
length(names(df))
