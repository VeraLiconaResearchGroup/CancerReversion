names(other) <- 'Other'
genre_tot_2 <- c(genre_tot[genre_tot >= 700], other)
pct <- round(genre_tot_2/sum(genre_tot_2)*100, digits = 1)
lbls <- paste(names(genre_tot_2), paste(pct, '%', sep = ""))
#build pie chart
pie(genre_tot_2, labels = lbls, main = "Genres of Films in IMDB", cex = 0.6, col = rainbow(length(genre_tot_2)))
#Scatter plot of wins vs imdb rating
col = c('black', 'red', 'green', 'blue')
plot(imdb$nrOfWins, imdb$imdbRating, col = col[imdb$nrOfGenre+1], xlab = 'Number of Wins', ylab = 'imdb Rating', main = 'imdb rating vs wins')
legend('bottomright', paste(unique(imdb$nrOfGenre), 'genres'), pch = 1, col = col)
par(mgp = c(1, .25, 0), mfrow = c(1,2), mar = c(5, 2,4,1))
# count number of films in each genre and percentages
genre_tot <- sapply(imdb[,-c(1:12)], sum)
other <- sum(genre_tot[genre_tot<700]) #include an 'other' category for categories with very few films
names(other) <- 'Other'
genre_tot_2 <- c(genre_tot[genre_tot >= 700], other)
pct <- round(genre_tot_2/sum(genre_tot_2)*100, digits = 1)
lbls <- paste(names(genre_tot_2), paste(pct, '%', sep = ""))
#build pie chart
pie(genre_tot_2, labels = lbls, main = "Genres of Films in IMDB", cex = 0.6, col = rainbow(length(genre_tot_2)))
#Scatter plot of wins vs imdb rating
col = c('black', 'red', 'green', 'blue')
plot(imdb$nrOfWins, imdb$imdbRating, col = col[imdb$nrOfGenre+1], xlab = 'Number of Wins', ylab = 'imdb Rating', main = 'imdb rating vs wins')
legend('bottomright', paste(unique(sort(imdb$nrOfGenre)), 'genres'), pch = 1, col = col)
par(mgp = c(1, .25, 0), mfrow = c(1,2), mar = c(5, 2,4,1))
# count number of films in each genre and percentages
genre_tot <- sapply(imdb[,-c(1:12)], sum)
other <- sum(genre_tot[genre_tot<700]) #include an 'other' category for categories with very few films
names(other) <- 'Other'
genre_tot_2 <- c(genre_tot[genre_tot >= 700], other)
pct <- round(genre_tot_2/sum(genre_tot_2)*100, digits = 1)
lbls <- paste(names(genre_tot_2), paste(pct, '%', sep = ""))
#build pie chart
pie(genre_tot_2, labels = lbls, main = "Genres of Films in IMDB", cex = 0.6, col = rainbow(length(genre_tot_2)))
#Scatter plot of wins vs imdb rating
plot(imdb$nrOfWins, imdb$imdbRating, col = rainbow(4)[imdb$nrOfGenre+1], xlab = 'Number of Wins', ylab = 'imdb Rating', main = 'imdb rating vs wins')
legend('bottomright', paste(unique(sort(imdb$nrOfGenre)), 'genres'), pch = 1, col = rainbow(4))
61/70
528.5/554
528.5/554*.75
.93-0.7154783
(.93-0.7154783)/.25
?log10
-8e5
ln(-8e5)
log(-8e5)
-8*1-^5
-8*10^5
log(-8*10^5)
log10(-8*10^5)
log(-1)
log(8e5)
log(0)
log10(8e5)
log10(0)
90/230
27/230
142/230
142/230
4/230
142+90+27
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
?BiocManager::install
?install.packagtes
?install.packages
source('~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Writing/presentation heatmaps.R')
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t", escape_double = FALSE, col_names = TRUE, col_types = cols(MCF10A = col_number(),PERT = col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis2/insilico")
library(readxl)
library(NMF)
library(readr)
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t", escape_double = FALSE, col_names = TRUE, col_types = cols(MCF10A = col_number(),PERT = col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t", escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_exp
avg_expr<-data.frame(avg_exp)
avg_expr
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t", row.names = 1, escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
rownames(avg_expr)=avg_expr[,1]
avg_expr
avg_expr = avg_expr[,-1]
avg_expr
names(avg_expr)<-c('MCF10A','Perturbation','MDA-MB-231')
apply(avg_expr, 2, as.numeric)
aheatmap(avg_expr, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors.png")
norm <- read.table('normal-pert_logss', row.names = 1, header = TRUE)
str(norm)
norm <- norm %>% t() %>% as.data.frame()
library(tidyverse)
norm <- norm %>% t() %>% as.data.frame()
str(norm)
names(avg_expr)<-c('MDA-MB-231','MCF10A','Perturbation')
apply(avg_expr, 2, as.numeric)
aheatmap(avg_expr, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors.png")
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MDA-MB-231','MCF10A','Perturbation')
# apply(avg_expr, 2, as.numeric)
aheatmap(avg_expr, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors.png")
names(norm)
aheatmap(norm, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors.png")
df <- cbind(avg_exp, norm)
aheatmap(df, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="all.png")
df
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= "NULL", MDAMB231 = col_number()), trim_ws = TRUE)
avg_exp
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_null(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_exp
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
avg_expr <- avge_expr[,-4]
avg_expr <- avg_expr[,-4]
avg_expr
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MDA-MB-231','MCF10A')
# apply(avg_expr, 2, as.numeric)
aheatmap(avg_expr, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors.png")
df <- cbind(avg_exp, norm)
df
str(df)
str(norm)
row.names(norm)
row.names(avg_expr)
row.names(avg_exp) <- row.names(norm)
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
apply(avg_expr, 2, as.numeric)
aheatmap(df, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="all.png")
apply(df, 2, as.numeric)
aheatmap(df, hclustfun = "complete",cellwidth= 80, Rowv = NA, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="all.png")
str(df)
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
str(df)
names(norm)
names(avg_expr)
avg_exp <- read.table('for_heatmaps_attrs.txt', row.names = 1)
# avg_expr<-data.frame(avg_exp)
avg_expr <- avg_expr[,-4]
avg_expr <- read.table('for_heatmaps_attrs.txt', row.names = 1)
# avg_expr<-data.frame(avg_exp)
avg_expr <- avg_expr[,-4]
avg_expr
# avg_expr<-data.frame(avg_exp)
avg_expr <- avg_expr[,-4]
source('~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis2/insilico/presentation heatmaps.R', echo=TRUE)
avg_expr
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
# avg_expr <- avg_expr[,-4]
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MDA-MB-231','MCF10A', 'Pert')
apply(avg_expr, 2, as.numeric)
aheatmap(avg_expr, hclustfun = "complete",cellwidth= 80, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors.png")
head(norm)
head(avg_expr)
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
# avg_expr <- read.table('for_heatmaps_attrs.txt', row.names = 1)
avg_expr<-data.frame(avg_exp)
avg_expr <- avg_expr[,-4]
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MDA-MB-231','MCF10A', 'Pert')
apply(avg_expr, 2, as.numeric)
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
head(df)
df <- df[,-"name"]
df <- df[,-1]
apply(df, 2, as.numeric)
aheatmap(df, hclustfun = "complete",cellwidth= 80, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="all.png")
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
dim(norm)
norm <- norm %>% t() %>% as.data.frame()
norm
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
names(norm)
head(norm)
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
head(norm)
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
aheatmap(norm, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors.png")
norm
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
aheatmap(norm, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors.png")
norm$Perturb_0761160
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
aheatmap(norm, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors.png")
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
aheatmap(norm, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors.png")
norm2 <- norm[row.names(norma) %in% RON,]
norm2 <- norm[row.names(norm) %in% RON,]
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% RON,]
dim(norm2)
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
norm2
dim(norm2)
len(RON)
length(RON)
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON.png")
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC_disc.png")
norm <- read.table('normal-pert_logss.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm <- read.table('normal-pert_logss', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
df <- df[,-1]
df <- cbind(avg_exp, norm)
head(df)
df <- df[,-1]
apply(df, 2, as.numeric)
df2 <- df[row.names(df) %in% paste(RON, sep = ""),]
aheatmap(df2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON.png")
network <- read.table("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction 3/networknodes_230", quote="\"", comment.char="")
View(network)
CL_genes <- read.table("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/CL_genes.txt", quote="\"", comment.char="")
View(CL_genes)
intersect(network$V1, CL_genes$V1)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
#Lists we're comparing to:
HOC<- read.csv("../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
## setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
## ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
weightedsums2
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../../_assets/images_proj2/TFs_weightedsums_graph_table_FOC.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
weightedsums2
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
knitr::opts_chunk$set(echo = TRUE)
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
library(FRACTION)
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
# library(FRACTION)
library(stargazer)
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
# library(FRACTION)
# library(stargazer)
#Input Files:
rankedDEGs<-read.csv("FunDEGs_rankDEGs_zscore_pvalFDR_4652", header = FALSE, col.names = "gene")
FOC<-read.csv("FunDEGs_FOC_LCC_noHKG_80", header = FALSE,  col.names = "gene")
SOC<-read.csv("FunDEGs_SOC_exprnoHKG_316.txt", header=FALSE,  col.names = "gene")
#Lists we're comparing to:
HOC<- read.csv("../EMT_innateimmune.txt", header = FALSE,  col.names = "gene")
CL<-read.csv("../CL_genes.txt", header = FALSE,  col.names = "gene")
breastDO <-read.csv("../breast_DO.txt", header = FALSE,  col.names = "gene")
names(HOC) <- "gene"
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$gene,FOC$gene,SOC$gene)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$gene))
y<-length(intersect(i,breastDO$gene))
z<-length(intersect(i,CL$gene))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'First order FunDEGs'
weightedsums[3,1]<-'Second order FunDEGs'
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
# ggsave("../../../../_assets/images_proj2/weightedsums_plusTABLE.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/weightedsums.png", g1, "png")
g1
weightedsums
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis2/insilico")
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm <- norm %>% scale()
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC_disc.png")
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC.png")
?aheatmap
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
df2 <- df[row.names(df) %in% paste(RON, sep = ""),]
aheatmap(df2, hclustfun = "complete",cellwidth= 80, scale = "row", color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON.png")
norm <- read.table('normal_DAC.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC.png")
norm <- read.table('normal-pert_logss', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% RON,]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_logss.png")
# norm <- norm %>% scale()
avg_exp <- read_delim("for_heatmaps_attrs.txt", "\t",  escape_double = FALSE, col_names = TRUE, col_types = cols(name = col_character(), MCF10A = col_number(),Pert= col_number(), MDAMB231 = col_number()), trim_ws = TRUE)
# avg_expr <- read.table('for_heatmaps_attrs.txt', row.names = 1)
avg_expr<-data.frame(avg_exp)
avg_expr <- avg_expr[,-4]
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
head(avg_expr)
names(avg_expr)<-c('MDA-MB-231','MCF10A')#, 'Pert')
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
head(df)
df <- df[,-1]
apply(df, 2, as.numeric)
df2 <- df[row.names(df) %in% paste(RON,"", sep = ""),]
aheatmap(df2, hclustfun = "complete",cellwidth= 80, scale = "row", color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_logss.png")
aheatmap(df2, hclustfun = "complete",cellwidth= 80,  color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_logss.png")
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
row.names(avg_expr) <- row.names(norm)
df <- cbind(avg_exp, norm)
df <- df[,-1]
apply(df, 2, as.numeric)
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% RON,]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DSC_disc.png")
head(nrom2)
head(norm2)
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC_disc.png")
head(norm2)
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm) %in% paste(RON,"_DAC", sep = ""),]
norm2
source('~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis2/insilico/presentation heatmaps.R', echo=TRUE)
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_RON_DAC_disc.png")
aheatmap(norm, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="norm_attractors_DAC_disc.png")
norm <- read.table('normal_DAC_disc.txt', row.names = 1, header = TRUE)
norm <- norm %>% t() %>% as.data.frame()
norm3 <- norm[,"Perturb_0285488"]
head(norm3)
norm3
norm3 <- norm[,c("attr_MCF10A","Perturb_0285488")]
names(norm)
norm3 <- norm[,c("MCF10A","Perturb_0285488")]
norm3
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm3) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
norm3 <- norm[,c("MCF10A","Perturb_0285488")]
RON <- c("CASP3", "CCNG2", "CDC20", "CDC25A", "CDC25C", "CDK1", "CYLD", "FYN", "HDAC1", "HUWE1", "KAT2B", "NOTCH1", "PRKCD", "PTK6", "PTPN1", "RAC1", "RB1", "RPS6KA3", "S100A2")
norm2 <- norm[row.names(norm3) %in% paste(RON,"_DAC", sep = ""),]
head(norm2)
head(norm3)
norm2 <- norm3[row.names(norm3) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
norm3$MDAMB231 <- rep(0, nrow(nrom3))
norm3$MDAMB231 <- rep(0, nrow(norm3))
norm2 <- norm3[row.names(norm3) %in% paste(RON,"_DAC", sep = ""),]
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
aheatmap(norm2, hclustfun = "complete",cellwidth= 80, color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
aheatmap(norm2, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
norm3 <- norm[,c("MCF10A","Perturb_0285488")]
norm3$MDAMB231 <- rep(0, nrow(norm3))
aheatmap(norm3, hclustfun = "complete",cellwidth= 80,  scale = "row",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="attractors_ofint_DAC_disc.png")
