pref <- 'SFAoutput_full_FC1_'
n = 6561
length(n)
nchar(n)
n = '6561'
nchar(n)
m <- seq(1,6561)
paste(rep('0', nchar(n) - nchar(m)), m, collapse = "" )
paste(rep('0', nchar(n) - nchar(m)), m)
rep('0', nchar(n) - nchar(m))
thing <- seq(1,6561)
for( m in thing){
paste(rep('0', nchar(n) - nchar(m)), m)
}
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m))
}
n = 10
nchar(n)
thing <- seq(1,n)
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m))
}
print(paste(rep('0', nchar(n) - nchar(m)), m), collapse = "")
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m), collapse = "")
}
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m), sep = "", collapse = "")
}
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
n = 10
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = "")))
}
suf
n = 10
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))))
}
suf
suf <- c()
n = 10
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))))
}
suf
n = 10
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
suf
names <- paste(pref, suf, sep ="")
names
names <- paste(pref, suf, '.txt' sep ="")
names <- paste(pref, suf, '.txt', sep ="")
names
df <-as.data.frame()
df <- data.frame()
DF
df
pref <- 'SFAoutput_full_FC1_'
n = 6561
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
df <- data.frame()
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
nchar(n)
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
names
names[1]
names[100]
for( m in thing){
print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(m)
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(ncahr(m))
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(nchar(m))
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
typeof(print(nchar(m)))
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
typeof(nchar(m))
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(typeof(nchar(m)))
# print(nchar(n) - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(4 - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
thing <- seq(1,10)
suf <- c()
for( m in thing){
print(4 - nchar(m))
suf <- c(suf, paste(rep('0', nchar(n) - nchar(m)), m, sep = ""))
}
for( m in thing){
print(rep('0', 4 - nchar(m)))
suf <- c(suf, paste(rep('0', 4 - nchar(m)), m, sep = ""))
}
print(rep('0', 4 - nchar(m), sep = ""))
for( m in thing){
print(rep('0', 4 - nchar(m), sep = ""))
suf <- c(suf, paste(rep('0', 4 - nchar(m), sep = ""), m, sep = ""))
}
for( m in thing){
print(rep('0', 4 - nchar(m), collapse = ""))
suf <- c(suf, paste(rep('0', 4 - nchar(m), sep = ""), m, sep = ""))
}
rep('0', 4 - nchar(m))
for( m in thing){
print(rep('0', 4 - nchar(m)))
suf <- c(suf, paste(rep('0', 4 - nchar(m)), m, sep = "", collapse = " "))
}
suf
thing <- seq(1,100)
suf <- c()
for( m in thing){
print(rep('0', 4 - nchar(m)))
suf <- c(suf, paste(rep('0', 4 - nchar(m)), m, sep = ""))
}
suf
?rep
rep('0', 4 - nchar(m))
rep('0', 4 - nchar(4))
rep('0', 4 - nchar(1000))
rep('0', 4 - nchar(100))
paste(rep('0', 4 - nchar(m)), collapse = " ")
paste(rep('0', 4 - nchar(m)), collapse = " ")
paste(rep('0', 4 - nchar(1)), collapse = " ")
paste(rep('0', 4 - nchar(1)), collapse = "")
n = 6561
nchar(n)
thing <- seq(1,100)
suf <- c()
for( m in thing){
suf <- c(suf, paste(paste(rep('0', 4 - nchar(m)), collapse = ""), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
df <- data.frame()
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis/insilico_perturbations")
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
df <- data.frame(nrow = 116)
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
View(df)
df <- data.frame(names)
View(df)
df <- data.frame()
View(df)
df <- data.frame(rep(0, 116))
View(df)
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
View(df)
for(name in names){
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
head(df1)
}
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
for(name in names){
print(name)
df1 <- read.csv(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
}
for(name in names){
print(name)
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
}
View(df)
df1 <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", name, sep = ""), row.names = 1, header = FALSE)
df1 <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
View(df1)
df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
for(name in names){
print(name)
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
View(df)
# df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
df <- data.frame(col = int())
# df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
df <- data.frame(col = integer())
View(df)
for(name in names){
print(name)
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
for(name in names){
print(name)
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
n = 6561
nchar(n)
thing <- seq(1,6561)
suf <- c()
for( m in thing){
suf <- c(suf, paste(paste(rep('0', 4 - nchar(m)), collapse = ""), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE)
for(name in names){
print(name)
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
df <- df[,-1]
head(df)
# Discretize DAC
disc <- function(x){
if(x < 0){
x <- -1
}else if(x > 0){
x <- 1
} else{
x <- 0
}
}
df_disc <- apply(df, c(1,2), disc) %>% as.data.frame()
livrary(tidyverse)
library(tidyverse)
df_disc <- apply(df, c(1,2), disc) %>% as.data.frame()
df_disc
df_disc <- df_disc %>% t() %>% as.data.frame()
head(df_disc)
row.names(df_disc) <- paste("Perturb_", suf, sep = "")
head(df_disc)
write.table(df_disc, "Perturbations_FC1.txt", quote = FALSE)
k3 <- kmeans(df_disc, centers = 3, nstart = 10000, iter.max = 30)
plotcluster(df_disc, k3$cluster, bw = FALSE)
library(fpc)
plotcluster(df_disc, k3$cluster, bw = FALSE)
View(k3)
plotcluster(df_disc, k3$cluster, bw = FALSE, pch = 16)
legend("bottomleft", c("cluster1", "cluster2", "cluster3"), c("black", "red", "green"), pch = c(16,16,16))
legend("bottomleft", c("cluster1", "cluster2", "cluster3"), col c("black", "red", "green"), pch = c(16,16,16))
legend("bottomleft", c("cluster1", "cluster2", "cluster3"), col= c("black", "red", "green"), pch = c(16,16,16))
legend("best", c("cluster1", "cluster2", "cluster3"), col= c("black", "red", "green"), pch = c(16,16,16))
legend("center", c("cluster1", "cluster2", "cluster3"), col= c("black", "red", "green"), pch = c(16,16,16))
a231 <- read.table("../SFA_2/231_attractor_discrete", row.names = 1) %>% t() %>% as.data.frame()
a10a <- read.table("../SFA_2/10A_attractor_discrete", row.names = 1) %>% t() %>% as.data.frame()
data <- rbind(a231, a10a, df_disc)
k3 <- kmeans(data, centers = 3, nstart = 10000, iter.max = 30)
plotcluster(data, k3$cluster, bw = FALSE)
legend("bottomleft", c("cluster1", "cluster2", "cluster3"), col= c("black", "red", "green"), pch = c(16,16,16))
View(k3)
plotcluster(data, k3$cluster, bw = FALSE, pch = 16)
legend("bottomleft", c("cluster1", "cluster2", "cluster3"), col= c("black", "red", "green"), pch = c(16,16,16))
gapstat1 <- clusGap(data, kmeans, 10, B = 150, iter.max = 30, nstart = 100)
library(cluster)
gapstat1 <- clusGap(data, kmeans, 10, B = 150, iter.max = 30, nstart = 100)
plot1 <- fviz_gap_stat(gapstat1, maxSE = list(method = "Tibs2001SEmax"))
plot1
maxSE(discData$gap, discData$SE.sim, method = "Tibs2001SEmax")
maxSE(plot1$data$gap, discData$SE.sim, method = "Tibs2001SEmax")
maxSE(plot1$data$gap, plot1$data$SE.sim, method = "Tibs2001SEmax")
k10 <- kmeans(data, centers = 10, nstart = 10000, iter.max = 30)
plotcluster(data, 10$cluster, bw = FALSE, pch = 16)
plotcluster(data, k10$cluster, bw = FALSE, pch = 16)
legend("left", paste("Cluster", seq(1,10), sep = ""), col= rainbow(10), pch = rep(16, 10))
plotcluster(data, k10$cluster, bw = FALSE, pch = 16)
legend("right", paste("Cluster", seq(1,10), sep = ""), col= rainbow(10), pch = rep(16, 10))
gapstat1 <- clusGap(data, kmeans, 15, B = 150, iter.max = 30, nstart = 100)
df <- data.frame(matrix(ncol = 3, nrow = 0))
df
df <- data.frame(matrix(ncol = 1, nrow = 10))
df
df <- data.frame(matrix(ncol = 0, nrow = 10))
df
cbind(df, rep(1, 10))
pref <- 'SFAoutput_full_FC1_'
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis/insilico_perturbations")
pref <- 'SFAoutput_full_FC1_'
n = 6561
thing <- seq(1,6561)
suf <- c()
for( m in thing){
suf <- c(suf, paste(paste(rep('0', 4 - nchar(m)), collapse = ""), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
# df <- read.table(paste("SFAoutputFC1/SFAoutput_full_FC1_0100.txt", sep = ""), row.names = 1, header = FALSE) #initialize df
df <- data.frame(matrix(ncol = 0, nrow = 116))
for(name in names){
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
View(df)
names(df) <- paste("Perturb_", suf, sep = "")
head(df)
df[6,6]
df[1:6,1:6]
df_disc <- disc(df)
# Discretize DAC
disc <- function(x){
if(x < 0){
x <- -1
}else if(x > 0){
x <- 1
} else{
x <- 0
}
}
df_disc <- apply(df, c(1,2), disc) %>% as.data.frame()
df_disc <- df_disc %>% t() %>% as.data.frame()
df_disc[1:6,1:6]
n = 6561
thing <- seq(1,n)
suf <- c()
for( m in thing){
suf <- c(suf, paste(paste(rep('0', nchar(n) - nchar(m)), collapse = ""), m, sep = ""))
}
names <- paste(pref, suf, '.txt', sep ="")
df <- data.frame(matrix(ncol = 116, nrow = 0))
for(name in names){
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE) %>% t() %>% as.data.frame()
df <- rbind(df, df1)
}
row.names(df) <- paste("Perturb_", suf, sep = "")
df <- data.frame(matrix(ncol = 0, nrow = 116))
for(name in names){
df1 <- read.table(paste("SFAoutputFC1/", name, sep = ""), row.names = 1, header = FALSE)
df <- cbind(df, df1)
}
names(df) <- paste("Perturb_", suf, sep = "")
df[1:6,1:6]
df <- df %>% t() %>% as.data.frame()
sens <- read.table("sen_attr.txt", row.names = 1) %>% t() %>% as.data.frame()
res <- read.table("res_attr.txt", row.names = 1) %>% t() %>% as.data.frame()
veh <- read.table("veh_attr.txt", row.names = 1) %>% t() %>% as.data.frame()
t1 <- read.table("t1cis_attr.txt", row.names = 1) %>% t() %>% as.data.frame()
test <- read.table("rons_8", col.names = "RON")
View(test)
data("PimaIndiansDiabetes2", package = "mlbench")
install.packages("mlbench")
data("PimaIndiansDiabetes2", package = "mlbench")
names(PimaIndiansDiabetes2)
PimaIndiansDiabetes2$diabetes
head(PimaIndiansDiabetes2)
install.packages("ElemStatLearn")
library(ElemStatLearn)
require(class)
x <- mixture.example$x
g <- mixture.example$y
head(mixture.example)
typeof(mixture.example)
mixture.example$x
xnew <- mixture.example$xnew
View(xnew)
?knn
mod15 <- knn(x, xnew, g, k=15, prob=TRUE)
mod15
?attr
prob <- attr(mod15, "prob")
prob
prob <- ifelse(mod15=="1", prob, 1-prob)
head(prob)
px1 <- mixture.example$px1
px2 <- mixture.example$px2
prob15 <- matrix(prob, length(px1), length(px2))
View(prob15)
par(mar=rep(2,4))
contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
"15-nearest neighbour", axes=FALSE)
points(x, col=ifelse(g==1, "coral", "cornflowerblue"))
gd <- expand.grid(x=px1, y=px2)
points(gd, pch=".", cex=1.2, col=ifelse(prob15>0.5, "coral", "cornflowerblue"))
box()
PimaIndiansDiabetes2$px1
mixture.example$px1
mixture.example$x
mixture.example$x[,1]
mixture.example$px1
par(mar=rep(2,4))
points(x, col=ifelse(g==1, "coral", "cornflowerblue"))
gd <- expand.grid(x=px1, y=px2)
points(gd, pch=".", cex=1.2, col=ifelse(prob15>0.5, "coral", "cornflowerblue"))
box()
?contour
par(mar=rep(2,4))
# contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
"15-nearest neighbour", axes=FALSE)
plot(x, col=ifelse(g==1, "coral", "cornflowerblue"))
# gd <- expand.grid(x=px1, y=px2)
points(gd, pch=".", cex=1.2, col=ifelse(prob15>0.5, "coral", "cornflowerblue"))
box()
par(mar=rep(2,4))
# contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
# "15-nearest neighbour", axes=FALSE)
plot(x, col=ifelse(g==1, "coral", "cornflowerblue"))
# gd <- expand.grid(x=px1, y=px2)
points(gd, pch=".", cex=1.2, col=ifelse(prob15>0.5, "coral", "cornflowerblue"))
box()
prob15
par(mar=rep(2,4))
# contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
# "15-nearest neighbour", axes=FALSE)
plot(x, col=ifelse(g==1, "coral", "cornflowerblue"))
# gd <- expand.grid(x=px1, y=px2)
points(gd, pch=".", cex=1.2, col=ifelse(prob>0.5, "coral", "cornflowerblue"))
box()
par(mar=rep(2,4))
# contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
# "15-nearest neighbour", axes=FALSE)
plot(x, col=ifelse(g==1, "coral", "cornflowerblue"))
# gd <- expand.grid(x=px1, y=px2)
# points(gd, pch=".", cex=1.2, col=ifelse(prob>0.5, "coral", "cornflowerblue"))
box()
# contour(px1, px2, prob15, levels=0.5, labels="", xlab="", ylab="", main=
# "15-nearest neighbour", axes=FALSE)
plot(x, col=ifelse(g==1, "coral", "cornflowerblue"))
mod15 <- knn(x, xnew, g, k=15)
mod15
table(mod15)
?knn
?gsub
?kmeans
install.packages("caret")
library(caret)
model$bestTune
model <- train(
diabetes ~., data = train.data, method = "knn",
trControl = trainControl("cv", number = 10),
preProcess = c("center","scale"),
tuneLength = 20
)
data("PimaIndiansDiabetes2", package = "mlbench")
PimaIndiansDiabetes2 <- na.omit(PimaIndiansDiabetes2)
# Inspect the data
sample_n(PimaIndiansDiabetes2, 3)
# Split the data into training and test set
set.seed(123)
training.samples <- PimaIndiansDiabetes2$diabetes %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- PimaIndiansDiabetes2[training.samples, ]
test.data <- PimaIndiansDiabetes2[-training.samples, ]
model <- train(
diabetes ~., data = train.data, method = "knn",
trControl = trainControl("cv", number = 10),
preProcess = c("center","scale"),
tuneLength = 20
)
typeof(model$bestTune)
x <- model$bestTune
x
model$bestTune$k
typeof(model$bestTune$k)
paste(model$bestTune$k, "Nearest Neighbors", sep = " ")
typeof(paste(model$bestTune$k, "Nearest Neighbors", sep = " "))
