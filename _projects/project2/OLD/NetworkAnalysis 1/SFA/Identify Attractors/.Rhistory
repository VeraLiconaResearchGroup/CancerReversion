weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
formattable(weightedsums)
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
ggarrange()
g1 <- ggplot(data= weightedsums, aes(x = step_size, y =sum)) + geom_bar(stat="identity", aes(fill = step_size)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
g1 <- ggplot(data= weightedsums, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promotor_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
g1 <- ggplot(data= weightedsums, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
install.packages("ggpubr")
library(ggpubr)
table <- formattable(weightedsums)
table
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
table <- formattable(weightedsums)
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
table
weightedsums
table
table <- formattable(weightedsums[,-1])
table
table <- formattable(weightedsums)
table
table <- formattable(weightedsums, align =c("l","c","c","c","c", "r"),
list(`promotor_window` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold"))
))
table
table <- formattable(weightedsums, align =c("l","c","c","c","c", "c", "r"),
list(`promotor_window` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold"))
))
table
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
table <- formattable(weightedsums, align =c("l","c","c","c","c", "r"),
list(`promotor_window` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold"))
))
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
table
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
table
table <- formattable(weightedsums, align =c("c","c","c","c","c", "r"),
list(`promotor_window` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold"))
))
table
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
table <- formattable(weightedsums, align =c("c","c","c","c","c", "r"),
list(`promotor_window` = formatter(
"span", style = ~ style(color = "grey",font.weight = "bold"))
))
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
table
table <- formattable(weightedsums, align =c("c","c","c","c","c", "r"))
table
table <- formattable(weightedsums)
table
, align =c("c","c","c","c","c", "r")
table <- formattable(weightedsums, align =c("c","c","c","c","c", "r"))
table
kable(weightedsums) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
install.packages("kableExtra")
library(knitr)
library(kableExtra)
kable(weightedsums) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
table <- formattable(weightedsums, row.names=FALSE, align =c("c","c","c","c","c", "r"))
table
kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
table <- formattable(weightedsums, row.names=FALSE, align =c("c","c","c","c","c", "r"))
table
table <- formattable(weightedsums, row.names=FALSE, align =c("c","c","c","c","c", "c"))
table
formattable(weightedsums, row.names=FALSE, align =c("r","c","c","c","c", "r"))
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC_num= NA, HOC_perc= NA, breastDO_num= NA, breastDO_perc= NA, CLgenes_num=NA,CLgenes_perc=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
a <-length(intersect(i,HOC$V1))
b <- length(intersect(i,breastDO$V1))
c <- length(intersect(i,CL$V1))
x<-a/ilen
y<-b/ilen
z<-c/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,a,x,b,y,c,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
weightedsums2 <- weightedsums
kable(weightedsums, row.names = FALSE) %>%
kable_styling("stripped") %>%
add_header_above(c(" " = 1, 'HOC' = 2, 'breastDO' = 2, 'Clgenes' = 2))
kable(weightedsums, row.names = FALSE) %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, 'HOC' = 2, 'breastDO' = 2, 'Clgenes' = 2))
kable(weightedsums, row.names = FALSE)
kable(weightedsums, row.names = FALSE) %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, 'HOC' = 2, 'breastDO' = 2, 'Clgenes' = 2, " " = 1))
kable(weightedsums, row.names = FALSE) %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, 'HOC' = 2, 'breastDO' = 2, 'Clgenes' = 2, " " = 1))
kable(weightedsums, row.names = FALSE) %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, 'HOC' = 2, 'breastDO' = 2, 'Clgenes' = 2, " " = 1))
kable(weightedsums, row.names = FALSE)
kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
weightedsums2 <- weightedsums
kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
table <- formattable(weightedsums, row.names=FALSE, align =c("r","c","c","c","c", "r"))
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Step Size") +ylab("Weighted Sum") + theme(legend.position = "none")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
table
table2 <- kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
ggarrange(g1, table2)
tableGrob(table2)
library(gridExtra)
tableGrob(table2)
a <- tableGrob(table2)
typeof(a)
a
ggarrange(g1, a)
tbl <- tableGrob(table2, rows=NULL)
tbl
grid.arrange(g1 tbl,
grid.arrange(g1, tbl,
nrow = 2,
as.table = TRUE)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)))
tbl <- tableGrob(table2, rows=NULL, theme = tt)
grid.arrange(g1, tbl,
nrow = 2,
as.table = TRUE)
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
grid.arrange(g1, tbl,
nrow = 2,
as.table = TRUE)
out <- grid.arrange(g1, tbl,
nrow = 2,
as.table = TRUE)
grid.arrange(g1, tbl,
nrow = 2, heights = c(2, 0.5),
as.table = TRUE)
grid.arrange(g1, tbl,
nrow = 2, heights = c(3, 1),
as.table = TRUE)
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 10,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
out <- grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
out
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 10,
padding = unit(2, "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 1000,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 10,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
out <- grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1))
out
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
png("test.png", width = 1000, height = 1000)
grid.arrange(g1, tbl,
nrow = 2, heights = c(5, 1),
as.table = TRUE)
dev.off()
dev.off()
library(grid)
arrangeGrob(g1, tbl)
arrangeGrob(g1, tbl, nrow = 2)
ggsave("TEST.png", arrangeGrob(g1, tbl, nrow = 2), "png")
ggsave("TEST.png", arrangeGrob(g1, table2, nrow = 2), "png")
?arrangeGrob
ggsave("TEST.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(5,1)), "png")
ggsave("TEST.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
weightedsums2 <- weightedsums
table2 <- kable(weightedsums, row.names = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
table <- formattable(weightedsums, row.names=FALSE, align =c("r","c","c","c","c", "r"))
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Promotor Winodw Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)))
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 10,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
ggsave("TEST.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# out <- grid.arrange(g1, tbl,
#              nrow = 2, heights = c(5, 1),
#              as.table = TRUE)
# ggarrange(g1, a)
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
ggsave("../../_assets/images/weightedsums_TF_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
typeof(tbl)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 10,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
tbl
arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1))
ggsave("TEST.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
ggsave("../../_assets/images/weightedsums_TF_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$V1,AP1000$V1,AP1500$V1,AP2000$V1,AP2500$V1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))/ilen
y<-length(intersect(i,breastDO$V1))/ilen
z<-length(intersect(i,CL$V1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor Weighted Sums") + xlab("Promotor Winodw Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 10,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
ggsave("../../_assets/images/weightedsums_TF_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
# ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
?read.csv
?lapple
?lapply
knitr::opts_chunk$set(echo = TRUE)
library(NMF)
install.package("rngtools")
install.packages("rngtools")
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
updateR(admin_password = 'Madopointe98*')
install.packages(as.vector(needed_packages))
install.packages(c("knitr", "NMF", "readxl"))
library(ggplot2)
library("ggplot2")
library("tidyverse")
install.packages(tidyverse)
install.packages("tidyverse")
library("tidyverse")
library("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
#import files
avg_exp <- read_delim("network_attractors_10A_231", "\t", escape_double = FALSE, col_names = FALSE, col_types = cols(X2 = col_number(),X3 = col_number()), trim_ws = TRUE)
View(avg_exp)
avg_expr<-data.frame(avg_exp)
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MCF10A','MDA-MB-231')
View(avg_expr)
aheatmap(avg_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="avg_norm_exp.pdf")
library(NMF)
aheatmap(avg_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="avg_norm_exp.pdf")
aheatmap(avg_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="nework_attractors.pdf")
library(readxl)
library(NMF)
#import files
avg_exp <- read_delim("network_avg_expression_10A_231", "\t", escape_double = FALSE, col_names = FALSE, col_types = cols(X2 = col_number(),X3 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MCF10A','MDA-MB-231')
aheatmap(avg_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="avg_norm_exp.pdf")
ind_exp <- read_delim("network_indv_expression_10A_231", "\t", escape_double = FALSE, col_names = FALSE, col_types = cols(X2 = col_number(),X3 = col_number(),X4 = col_number(),X5 = col_number(),X6 = col_number(),X7 = col_number(),X8 = col_number(),X9 = col_number()), trim_ws = TRUE)
ind_expr<-data.frame(ind_exp)
rownames(ind_expr)=ind_expr[,1]
ind_expr = ind_expr[,-1]
names(ind_expr)<-c('MCF10A_1','MCF10A_2','MCF10A_3','MCF10A_4','MDA-MB-231_1','MDA-MB-231_2','MDA-MB-231_3','MDA-MB-231_4')
aheatmap(ind_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="ind_norm_exp.pdf")
#SFA heat maps
avg_exp <- read_delim("network_attractors_10A_231", "\t", escape_double = FALSE, col_names = FALSE, col_types = cols(X2 = col_number(),X3 = col_number()), trim_ws = TRUE)
avg_expr<-data.frame(avg_exp)
rownames(avg_expr)=avg_expr[,1]
avg_expr = avg_expr[,-1]
names(avg_expr)<-c('MCF10A','MDA-MB-231')
aheatmap(avg_expr,scale = 'row', hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="nework_attractors.pdf")
aheatmap(avg_expr, hclustfun = "complete",color=colorRampPalette(c('navy','white','firebrick3'))(80),filename="nework_attractors_2.pdf")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
df <- read.csv("231_expressed_zscore_12359.csv")
head(df)
gene_names <- as.data.frame(df$Gene_Symbol)
gene_names
head(gene_names)
len(gene_n ames)
len(gene_names)
length(gene_names)
length(df$Gene_Symbol)
write.table(gene_names, row.names = FALSE)
write.table(gene_names, "231_expressed_12359.txt" row.names = FALSE)
write.table(gene_names, "231_expressed_12359.txt", row.names = FALSE)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/NetworkAnalysis/SFA/Identify Attractors")
library(ordr)
install.packages("ordr")
library(ordr)
