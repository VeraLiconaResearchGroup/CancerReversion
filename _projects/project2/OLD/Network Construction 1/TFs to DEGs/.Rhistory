TF_Binding <- read.csv('TFBS_7_pulldown.csv') #read in TF binding profile
symbols <-read.table('TFs_TFID') #Read in TF IDs
symbols$V1 <- chartr("V$","V.", symbols$V1)
#for (i in 1:nrow(symbols)){
#  TF_Binding$ID<-gsub(symbols$V1[i],symbols$V2[i], TF_Binding$ID)}
#names(TF_Binding) = gsub(pattern = "V.", replacement = "V$", x = names(TF_Binding)) #fix names in columns
#names(TF_Binding) = gsub(pattern = "_.*", replacement = "", x = names(TF_Binding)) #fix names in columns
#Generate dataframe with columns of expressed+ATACed TFs
TFBS_DF<- data.frame(matrix(ncol = ncol(TF_Binding), nrow = 0)) #create new dataframe
colnames(TFBS_DF) <- colnames(TF_Binding)
input_gene_list <- read_csv("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt", col_names = FALSE) #read in gene input list
input_gene_list <- read.csv("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt", col_names = FALSE) #read in gene input list
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt", col_names = FALSE) #read in gene input list
input_gene_list <- read.table("../../Network Components/FunDEGs/FunDEGs_SOC_exprnoHKG_316.txt") #read in gene input list
input_gene_list
View(input_gene_list)
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$X1,] #modify dataframe
View(TFBS_DF)
TFBS_DF <- TF_Binding[TF_Binding$Symbol %in% input_gene_list$V1,] #modify dataframe
g <- as.vector(lapply(colnames(TFBS_DF), FUN = grepl, symbols$V1, fixed = TRUE))
h <- lapply(g, FUN = any)
l <- grep(TRUE, h)
TF_relevant <- TFBS_DF[, l]
TF_relevant <- cbind(TFBS_DF$Symbol, TF_relevant)
TF_sites_DF<- data.frame(matrix(ncol =2))
colnames(TF_sites_DF)<-c("TF","gene")
View(TF_Binding)
View(TF_sites_DF)
#TF_sites_DF$TF<-TF_relevant$`OFTEN_500_DF$Symbol`
#TF_sites_DF$contains_TFBS_for=as.vector(TF_sites_DF$contains_TFBS_for)
for (i in 1:nrow(TF_relevant)){
x<-TF_relevant[i,]
colnames(x)[1] <- "symbol"
y<-x[, colSums(x != 0) > 0]
TFBS<-levels(droplevels(y$symbol[1]))
TFBS<-c(TFBS,colnames(y))
TFBS<-TFBS[-2]
for (k in 1:(length(TFBS)-1)){
TF_sites_DF[nrow(TF_sites_DF) + 1,] = c(TFBS[k+1], TFBS[1])
}
}
TFs_symbols_file<-read.csv('TFs_toTFID.csv')
TFs_symbols<-TFs_symbols_file[,c('Gene.symbol','Site.model.ID')]
TFs_symbols$Site.model.ID<-chartr("V$","V.", TFs_symbols$Site.model.ID)
colnames(TFs_symbols) <- c('symbol','TF')
total <- merge(TFs_symbols,TF_sites_DF,by=c("TF"))
totallower<-as.data.frame(sapply(total,tolower))
View(total)
write.csv(total, "TF_toDEG_table.csv")
IPA_edge_info <- read.delim("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Construction/TFs to DEGs/IPA_edge_info", header=FALSE)
View(IPA_edge_info)
df <- IPA_edge_info[,c(1,3,2)]
df
write.txt(df, "IPA_edges.txt")
write.table(df, "IPA_edges.txt")
write.table(df, "IPA_edges.txt", row.names = FALSE)
?as.numeric
apply(as.numeric(), 2)
?apply
knitr::opts_chunk$set(echo = TRUE)
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$X1, HOC$X1))
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/FunDEGs")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
rankedDEGs<-read_csv("FunDEGs_rankDEGs_zscore_pvalFDR_4652", col_names = FALSE)
FOC<-read_csv("FunDEGs_FOC_LCC_noHKG_80", col_names = FALSE)
SOC<-read_csv("FunDEGs_SOC_exprnoHKG_316.txt", col_names=FALSE)
#Lists we're comparing to:
HOC<- read_csv("../EMT_innateimmune.txt", col_names = FALSE)
CL<-read_csv("../CL_genes.txt", col_names = FALSE)
breastDO <-read_csv("../breast_DO.txt", col_names = FALSE)
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$X1, HOC$X1))
HOC_in_FOC
Cl_in_FOC
# 7: "CAV1"  "CDC20" "DSP"   "ERBB2" "KRT8"  "PTTG1" "VIM"
Cl_in_FOC <- as.data.frame(intersect(FOC$X1, CL$X1))
Cl_in_FOC
HOC_in_FOC
names(x) <- y
name(x,y){
name <- function(x,y){
names(x) <- y
}
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$X1, HOC$X1)) %>% name("gene")
HOC_in_FOC
HOC_in_FOC
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$X1, HOC$X1)0
# 2: "CDC20", "VIM"
HOC_in_FOC <- as.data.frame(intersect(FOC$X1, HOC$X1))
View(HOC_in_FOC)
intersect(FOC$X1, HOC$X1)
HOC_in_SOC <- as.data.frame(intersect(SOC$X1, HOC$X1))
View(HOC_in_SOC)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
library(MASS)
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
View(g1)
g1
tbl
getwd()
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
ggsave("test.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
fractions(length(intersect(i,CL$X1))/ilen)
fractions(length(intersect(i,breastDO$X1))/ilen)
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
weightedsums
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-fractions(length(intersect(i,breastDO$X1))/ilen)
z<-fractions(length(intersect(i,CL$X1))/ilen)
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,x,y,z,SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
weightedsums
x
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-fractions(xlength(intersect(i,breastDO$X1))/ilen)
z<-fractions(length(intersect(i,CL$X1))/ilen)
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fractions(x),fractions(y),fractions(z),SUM)
}
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-fractions(length(intersect(i,breastDO$X1))/ilen)
z<-fractions(length(intersect(i,CL$X1))/ilen)
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fractions(x),fractions(y),fractions(z),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
fractions(x)
?fractions
typeof(x)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-fractions(length(intersect(i,HOC$X1))/ilen)
y<-fractions(length(intersect(i,breastDO$X1))/ilen)
z<-fractions(length(intersect(i,CL$X1))/ilen)
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fractions(x),fractions(y),fractions(z),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
weightedsums$HOC%>%fractions()
test <- weightedsums$HOC%>%fractions()
test <- weightedsums$HOC%>%fractions() $>$ as.data.frame()
test <- weightedsums$HOC%>%fractions() %>% as.data.frame()
View(test)
apply(test,2,fractions())
?apply
test
typeof(test)
test2 <- apply(weightedsums[,c(3,4,5)], 2, fractions)
View(test2)
library(fraction)
install.packages("fraction")
library(FRACTION)
install.packages("FRACTION")
library(FRACTION)
?fra
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-fra(length(intersect(i,HOC$X1))/ilen)
y<-fra(length(intersect(i,breastDO$X1))/ilen)
z<-fra(length(intersect(i,CL$X1))/ilen)
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fra(x),fra(y),fra(z),SUM)
}
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))/ilen
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fra(x),fra(y),fra(z),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))/ilen
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fra(length(intersect(i,HOC$X1))/ilen),fra(y),fra(z),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))/ilen
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,fractions(x),fractions(y),fractions(z),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
fra(weightedsums$HOC[1])
fractions(weightedsums$HOC[1])
install.packages("stargazer")
library(stargazer)
?prop.table
m <- matrix(1:4, 2)
m
prop.table(m, 1)
f = function(x, den) {paste0(round(x * den), "/", den)}
x <- c(0.55, 0.246, 0.767)
f(x, 10)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))/ilen
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(length(intersect(i,HOC$X1)), ilen),f(length(intersect(i,breastDO$X1)),ilen),f(length(intersect(i,CL$X1))/ilen),SUM)
}
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))/ilen
y<-length(intersect(i,breastDO$X1))/ilen
z<-length(intersect(i,CL$X1))/ilen
SUM<-((1/3)*x)+((1/3)*y)+((1/3)*z)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(length(intersect(i,HOC$X1)), ilen),f(length(intersect(i,breastDO$X1)),ilen),f(length(intersect(i,CL$X1)),ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
length(intersect(i,HOC$X1))
#Input Files:
rankedDEGs<-read_csv("FunDEGs_rankDEGs_zscore_pvalFDR_4652", col_names = FALSE)
FOC<-read_csv("FunDEGs_FOC_LCC_noHKG_80", col_names = FALSE)
SOC<-read_csv("FunDEGs_SOC_exprnoHKG_316.txt", col_names=FALSE)
#Lists we're comparing to:
HOC<- read_csv("../EMT_innateimmune.txt", col_names = FALSE)
CL<-read_csv("../CL_genes.txt", col_names = FALSE)
breastDO <-read_csv("../breast_DO.txt", col_names = FALSE)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))
y<-length(intersect(i,breastDO$X1))
z<-length(intersect(i,CL$X1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
varlist<-list(rankedDEGs$X1)
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))
y<-length(intersect(i,breastDO$X1))
z<-length(intersect(i,CL$X1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
View(weightedsums)
f = function(x, den) {paste0(x , "/", den)}
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))
y<-length(intersect(i,breastDO$X1))
z<-length(intersect(i,CL$X1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
View(weightedsums)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$X1,FOC$X1,SOC$X1)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$X1))
y<-length(intersect(i,breastDO$X1))
z<-length(intersect(i,CL$X1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'FOC'
weightedsums[3,1]<-'SOC'
View(weightedsums)
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
ggsave("test.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
ggsave("../../../../_assets/images_proj2/weightedsums_plusTABLE.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
f = function(x, den) {paste0(x, "/", den)}
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network Components/TFs")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
#Lists we're comparing to:
HOC<- read.csv("../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC_num= NA, HOC_perc= NA, breastDO_num= NA, breastDO_perc= NA, CLgenes_num=NA, CLgenes_perc=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x),f(y),f(z),SUM)
}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC_num= NA, HOC_perc= NA, breastDO_num= NA, breastDO_perc= NA, CLgenes_num=NA, CLgenes_perc=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums[,c(1,2,4,6,8,9)]
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
View(weightedsums2)
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC_num= NA, HOC_perc= NA, breastDO_num= NA, breastDO_perc= NA, CLgenes_num=NA, CLgenes_perc=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
## setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
## ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
ggsave("../../../../_assets/images_proj2/TFs_weightedsums_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
ggsave("../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
