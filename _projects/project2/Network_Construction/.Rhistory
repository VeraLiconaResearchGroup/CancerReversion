setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Analysis/test_RNAseq2")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/network analysis 3/inputfiles")
library(reshape)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Analysis/inputfiles")
library(reshape)
nodes <- read.table("network_nodes_normalized_expression_replicates.txt", header = T, row.names = 1)
nodes2 <- melt(nodes)
dim(nodes2)
theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
library(tidyverse)
theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A") +
labs(x= 'Normalized Expression') + theme
boxplot(nodes2$value)
summary(nodes2$value)
perts2 <- read.table("../perturbation_level_factor2.txt", header = T, row.names = 1)
perts1.5 <- read.table("../perturbation_level_factor1.5.txt", header = T, row.names = 1)
perts <- read.table("../perturbation_level_sd.txt", header = T, row.names = 1)
ggplot() + geom_boxplot(data = nodes2, aes(value )) + theme + coord_flip() + geom_point(data = perts2, aes(y = X2.Mean), color = 'red')
points(perts2$X2.Mean, col = 'red')
names(perets2)
perts2 <- read.table("../perturbation_level_factor2.txt", header = T, row.names = 1)
names(perts2)
ggplot() + geom_boxplot(data = nodes2, aes(value )) + theme + coord_flip() + geom_point(data = perts2, aes(y = X2Mean), color = 'red')
points(perts2$X2.Mean, col = 'red')
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts)), perts$Mean...3SD, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as Mean + 3*SD')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts1.5)), perts1.5$X1.5.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 1.5*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
boxplot(nodes2$value, ylim = c(0, max(perts2$X2.Mean)+.01) , ylab = 'Normalized Expression Value')
points(rep(1, nrow(perts2)), perts2$X2.Mean, col = 'red', pch = 4)
boxplot(nodes2$value, ylim = c(0, max(perts2$X2Mean)+.01) , ylab = 'Normalized Expression Value')
points(rep(1, nrow(perts2)), perts2$X2.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 2*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as Mean + 3*SD") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts$Mean...3SD, y = rep(0, nrow(perts))), aes(x,y), color = 'red', pch = 4, cex = 3)
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 1.5*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts1.5$X1.5.Mean, y = rep(0, nrow(perts1.5))), aes(x,y), color = 'red', pch = 4, cex = 3)
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 2*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts2$X2.Mean, y = rep(0, nrow(perts2))), aes(x,y) , color = 'red', pch = 4, cex = 3)
## Explore expression of FVS nodes
FVS <- scan("FVS_12", what = "character", skip = 1)
df <- read.csv("../../Network Components/FunDEGs/data2.csv", header = T, row.names = 1)
df <- read.csv("../../Network_Components/FunDEGs/data2.csv", header = T, row.names = 1)
df2 <- df %>% filter(Gene_Symbol %in% FVS)
df3 <- df2[,c("Gene_Symbol", "MDA_MB.231.MCF10A.fc" ,"MDA_MB.231.MCF10A.bh.pval")]
write.table(df3, "FVS_fc_pval.txt", quote = F, row.names = F)
disc <- read.table('expression_rep_disc_meancol.txt', header = T, row.names = 1)
df2 <- df %>% filter(MDA_MB.231.MCF10A.fc >= 2)
#Boxplot of normalized expression data with
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts)), perts$Mean...3SD, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as Mean + 3*SD')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#--------------------------------------------------
# explore_activation_levels.R is a script that generates figures illustrating how the proposed activity level for knock-in perturbations
# compares to the expression distribution of the rest of the network nodes. It also pulls the fold change and p-value for FVS nodes.
#
# INPUTS:
# 1. Normalized Expression Data of Network Nodes
# 2. Activity level of FVS nodes when knock-in simulateed as 2*mean
# 3. Activity level of FVS nodes when knock-in simulateed as 1.5*mean
# 4. Activity level of FVS nodes when knock-in simulateed as meean + 3*sd
# 5. A list of FVS nodes
# 6. data2.csv: the file containng results from DESeq2 analyses
#
# OUTPUTS:
# 1. Figures illustrating the distribution of expression values
# 2. A table with log fold change and adjusted p-value for each FVS node
#--------------------------------------------------
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Analysis/inputfiles")
library(reshape)
library(tidyverse)
theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# Read in normalized expression data of network nodes
nodes <- read.table("network_nodes_normalized_expression_replicates.txt", header = T, row.names = 1)
nodes2 <- melt(nodes)
# Visualize distribution of activity levels with histogram and boxplot
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A") +
labs(x= 'Normalized Expression') + theme
boxplot(nodes2$value)
# Summary stats of expression values for network nodes
summary(nodes2$value)
#Read in pre-generated activity levels for each FVS node (Use 4b_calculate_activation.py)
perts2 <- read.table("../perturbation_level_factor2.txt", header = T, row.names = 1) #Knock-in = 2*mean
perts1.5 <- read.table("../perturbation_level_factor1.5.txt", header = T, row.names = 1) #Knock-in = 1.5*mean
perts <- read.table("../perturbation_level_sd.txt", header = T, row.names = 1) #Knock-in = mean + 3*sd
# pdf('../compare_stimulation_values.pdf') #Safe images to pdf file
#Boxplot of normalized expression data with knock-in values of mean + 3*sd overlayed
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts)), perts$Mean...3SD, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as Mean + 3*SD')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Boxplot of normalized expression data with knock-in values of 1.5*mean overlayed
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts1.5)), perts1.5$X1.5.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 1.5*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Boxplot of normalized expression data with knock-in values of 2*mean overlayed
boxplot(nodes2$value, ylim = c(0, max(perts2$X2Mean)+.01) , ylab = 'Normalized Expression Value')
points(rep(1, nrow(perts2)), perts2$X2.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 2*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Histogram of normalized expression data with knock-in values of mean + 3*sd overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as Mean + 3*SD") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts$Mean...3SD, y = rep(0, nrow(perts))), aes(x,y), color = 'red', pch = 4, cex = 3)
#Histogram of normalized expression data with knock-in values of 1.5*mean overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 1.5*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts1.5$X1.5.Mean, y = rep(0, nrow(perts1.5))), aes(x,y), color = 'red', pch = 4, cex = 3)
#Histogram of normalized expression data with knock-in values of 2*mean overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 2*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts2$X2.Mean, y = rep(0, nrow(perts2))), aes(x,y) , color = 'red', pch = 4, cex = 3)
# dev.off()
## Explore log2 fold change a adjusted p-value of FVS nodes
FVS <- scan("FVS_12", what = "character", skip = 1) #Read in FVS nodes
df <- read.csv("../../Network_Components/FunDEGs/data2.csv", header = T, row.names = 1) #Read in results from DESeq2 Analysis
df2 <- df %>% filter(Gene_Symbol %in% FVS)
df3 <- df2[,c("Gene_Symbol", "MDA_MB.231.MCF10A.fc" ,"MDA_MB.231.MCF10A.bh.pval")]
# write.table(df3, "FVS_fc_pval.txt", quote = F, row.names = F)
#--------------------------------------------------
# explore_activation_levels.R is a script that generates figures illustrating how the proposed activity level for knock-in perturbations
# compares to the expression distribution of the rest of the network nodes. It also pulls the fold change and p-value for FVS nodes.
#
# INPUTS:
# 1. Normalized Expression Data of Network Nodes
# 2. Activity level of FVS nodes when knock-in simulateed as 2*mean
# 3. Activity level of FVS nodes when knock-in simulateed as 1.5*mean
# 4. Activity level of FVS nodes when knock-in simulateed as meean + 3*sd
# 5. A list of FVS nodes
# 6. data2.csv: the file containng results from DESeq2 analyses
#
# OUTPUTS:
# 1. Figures illustrating the distribution of expression values
# 2. A table with log fold change and adjusted p-value for each FVS node
#--------------------------------------------------
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Analysis")
library(reshape)
library(tidyverse)
theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# Read in normalized expression data of network nodes
nodes <- read.table("inputfiles/network_nodes_normalized_expression_replicates.txt", header = T, row.names = 1)
nodes2 <- melt(nodes)
# Visualize distribution of activity levels with histogram and boxplot
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A") +
labs(x= 'Normalized Expression') + theme
boxplot(nodes2$value)
# Summary stats of expression values for network nodes
summary(nodes2$value)
#Read in pre-generated activity levels for each FVS node (Use 4b_calculate_activation.py)
perts2 <- read.table("perturbation_level_factor2.txt", header = T, row.names = 1) #Knock-in = 2*mean
perts1.5 <- read.table("perturbation_level_factor1.5.txt", header = T, row.names = 1) #Knock-in = 1.5*mean
perts <- read.table("perturbation_level_sd.txt", header = T, row.names = 1) #Knock-in = mean + 3*sd
# pdf('compare_stimulation_values.pdf') #Safe images to pdf file
#Boxplot of normalized expression data with knock-in values of mean + 3*sd overlayed
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts)), perts$Mean...3SD, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as Mean + 3*SD')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Boxplot of normalized expression data with knock-in values of 1.5*mean overlayed
boxplot(nodes2$value, ylab= 'Normalized Expression Value')
points(rep(1, nrow(perts1.5)), perts1.5$X1.5.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 1.5*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Boxplot of normalized expression data with knock-in values of 2*mean overlayed
boxplot(nodes2$value, ylim = c(0, max(perts2$X2Mean)+.01) , ylab = 'Normalized Expression Value')
points(rep(1, nrow(perts2)), perts2$X2.Mean, col = 'red', pch = 4)
title('Distribution of Expression Values With Stimulations Set as 2*Mean')
legend('topright', c("Experimental Expression Value", "Stimualtion Expression Value"), col = c("black", "red"), pch = c(1, 4))
#Histogram of normalized expression data with knock-in values of mean + 3*sd overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as Mean + 3*SD") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts$Mean...3SD, y = rep(0, nrow(perts))), aes(x,y), color = 'red', pch = 4, cex = 3)
#Histogram of normalized expression data with knock-in values of 1.5*mean overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 1.5*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts1.5$X1.5.Mean, y = rep(0, nrow(perts1.5))), aes(x,y), color = 'red', pch = 4, cex = 3)
#Histogram of normalized expression data with knock-in values of 2*mean overlayed
ggplot(data = nodes2, aes(value)) + geom_histogram(binwidth = .5, fill = 'white', color = 'black') +
ggtitle("Distribution of Normalized Expression Data for MDA-MB-231 and MCF10A \n with Stimulations as 2*Mean") +
labs(x= 'Normalized Expression') + theme + geom_point(data = data.frame(x = perts2$X2.Mean, y = rep(0, nrow(perts2))), aes(x,y) , color = 'red', pch = 4, cex = 3)
# dev.off()
## Explore log2 fold change a adjusted p-value of FVS nodes
FVS <- scan("inputfiles/FVS_12", what = "character", skip = 1) #Read in FVS nodes
df <- read.csv("../Network_Components/FunDEGs/data2.csv", header = T, row.names = 1) #Read in results from DESeq2 Analysis
df2 <- df %>% filter(Gene_Symbol %in% FVS)
df3 <- df2[,c("Gene_Symbol", "MDA_MB.231.MCF10A.fc" ,"MDA_MB.231.MCF10A.bh.pval")]
# write.table(df3, "FVS_fc_pval.txt", quote = F, row.names = F)
n
n
n
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_funDEG_analysis")
getwd()
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_funDEG_analysis")
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_funDEG_analysis")
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/FirstOrder_FunDEG_analysis")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_0500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
#Lists we're comparing to:
HOC<- read.csv("../../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../../_assets/images_proj2/TFs_weightedsums_graph_table_FOC.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
g1
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("~Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs")
library(readr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
#Input Files:
AP500<-read.csv("TFs_APIPA_500.csv", header = TRUE)
AP1000<-read.csv("TFs_APIPA_1000.csv", header = TRUE)
AP1500<-read.csv("TFs_APIPA_1500.csv", header = TRUE)
AP2000<-read.csv("TFs_APIPA_2000.csv", header = TRUE)
AP2500<-read.csv("TFs_APIPA_2500.csv", header = TRUE)
#Lists we're comparing to:
HOC<- read.csv("../EMT_innateimmune.txt", header = FALSE)
CL<-read.csv("../CL_genes.txt", header = FALSE)
breastDO <-read.csv("../breast_DO.txt", header = FALSE)
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(promoter_window = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(AP500$Gene_Symbol,AP1000$Gene_Symbol,AP1500$Gene_Symbol,AP2000$Gene_Symbol,AP2500$Gene_Symbol)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$V1))
y<-length(intersect(i,breastDO$V1))
z<-length(intersect(i,CL$V1))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x,ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'500'
weightedsums[2,1]<-'1000'
weightedsums[3,1]<-'1500'
weightedsums[4,1]<-'2000'
weightedsums[5,1]<-'2500'
# write.table(weightedsums,"gene_network/weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
weightedsums2 <- weightedsums
weightedsums2$rounded_sum <- round(weightedsums$sum, 4)
positions <- c("500", "1000", "1500", "2000", "2500")
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
#
# setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images_proj2")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums_graph_table.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/TFs_weightedsums.png", g1, "png")
## setwd("~/GitHub/gastonguay_compsysmed_labnotebook/_assets/images")
## ggsave("../../_assets/images/weightedsums_TF.png", g1, "png")
g1
g1 <- ggplot(data= weightedsums2, aes(x = promoter_window, y =sum)) + geom_bar(stat="identity", aes(fill = promoter_window)) +
scale_x_discrete(limits = positions) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Transcription Factor AP intersect with IPA all tissue Weighted Sums") + xlab("Promotor Window Size") +ylab("Weighted Sum") + theme(legend.position = "none")
g1
write.table(weightedsums,"weightedsums_TF.txt", row.names=FALSE, quote = FALSE)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/SecondOrder_FunDEGs_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/SecondOrder_FunDEGs_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/SecondOrder_FunDEG_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/TFs/SecondOrder_FunDEG_analysis")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/FunDEGs_rankedZscore")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/FunDEGs_ranked_pval")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Components/FunDEGs_rankedZscore")
getwd()
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
# library(FRACTION)
# library(stargazer)
#Input Files:
rankedDEGs<-read.csv("DEG_rankpval_top700", header = FALSE, col.names = "gene")
FOC<-read.csv("FOC_64", header = FALSE,  col.names = "gene")
SOC<-read.csv("SOC_pval_LCC_204", header=FALSE,  col.names = "gene")
#Lists we're comparing to:
HOC<- read.csv("../EMT_innateimmune.txt", header = FALSE,  col.names = "gene")
CL<-read.csv("../CL_genes.txt", header = FALSE,  col.names = "gene")
breastDO <-read.csv("../breast_DO.txt", header = FALSE,  col.names = "gene")
names(HOC) <- "gene"
f = function(x, den) {paste0(x, "/", den)}
weightedsums<-data.frame(gene_set = NA, number_genes = NA, HOC= NA, breastDO= NA, CLgenes=NA, sum=NA)
class(weightedsums$sum)<-'numeric'
varlist<-list(rankedDEGs$gene,FOC$gene,SOC$gene)
for (i in varlist){
ilen<-length(i)
x<-length(intersect(i,HOC$gene))
y<-length(intersect(i,breastDO$gene))
z<-length(intersect(i,CL$gene))
SUM<-((1/3)*x/ilen)+((1/3)*y/ilen)+((1/3)*z/ilen)
weightedsums[nrow(weightedsums)+1,] = list(NA,ilen,f(x, ilen),f(y,ilen),f(z,ilen),SUM)
}
weightedsums<-weightedsums[-1,]
weightedsums[1,1]<-'DEGs'
weightedsums[2,1]<-'First order FunDEGs'
weightedsums[3,1]<-'Second order FunDEGs'
# write.table(weightedsums,"gene_network/weightedsums_prtn_300.txt", row.names=FALSE, quote = FALSE)
tt <- ttheme_default(colhead=list(fg_params = list(fontface=c( "bold"))),
# fg_params=list(fontface=c(rep("plain", 4), "bold.italic")),
base_size = 7.5,
padding = unit(c(2, 4), "mm"))
tbl <- tableGrob(weightedsums, rows=NULL, theme = tt)
weightedsums$rounded_sum <- round(weightedsums$sum, 4)
g1 <- ggplot(data= weightedsums, aes(x = gene_set, y =sum)) + geom_bar(stat="identity", aes(fill = gene_set)) +
geom_text(aes(label = rounded_sum), vjust=1.6, color="white", size=3.5) +
ggtitle("Gene List Weighted Sums") + xlab("Gene list") +ylab("Weighted Sum") + theme(legend.position = "none")
# ggsave("weightedsums_plusTABLE.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/weightedsums_plusTABLE.png", arrangeGrob(g1, tbl, nrow = 2, heights = c(3,1)), "png")
# ggsave("../../../../_assets/images_proj2/weightedsums.png", g1, "png")
g1
write.table(weightedsums,"weightedsums.txt", row.names=FALSE, quote = FALSE)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
library(FRACTION)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
library(stargazer)
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
#Input Files:
network<-read.csv("networknodes_227", header = FALSE, col.names = "gene")
#Lists we're comparing to:
HOC<- read.csv("../Network Components/EMT_innateimmune.txt", header = FALSE,  col.names = "gene")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
library(readr)
library(ggplot2)
library(readr)
library(tidyverse)
library(ggpubr)
library(knitr)
library(gridExtra)
library(grid)
library(MASS)
#Input Files:
network<-read.csv("networknodes_227", header = FALSE, col.names = "gene")
#Lists we're comparing to:
HOC<- read.csv("../Network_Components/EMT_innateimmune.txt", header = FALSE,  col.names = "gene")
CL<-read.csv("../Network_Components/CL_genes.txt", header = FALSE,  col.names = "gene")
breastDO <-read.csv("../Network_Components/breast_DO.txt", header = FALSE,  col.names = "gene")
names(HOC) <- "gene"
f = function(x, den) {paste0(x, "/", den)}
Cl_in_net <- as.data.frame(intersect(network$gene, CL$gene))
HOC_in_net <- as.data.frame(intersect(network$gene, HOC$gene))
BDO_in_net <- as.data.frame(intersect(network$gene, breastDO$gene))
acsn_in_net <- as.data.frame(intersect(network$gene, acsn$V1))
acsn <- read.csv("acsn.txt", header = FALSE,  col.names = "gene")
setwd("~/Documents/GitHub/gastonguay_compsysmed_labnotebook/_projects/project2/Network_Construction")
acsn <- read.csv("acsn", header = FALSE,  col.names = "gene")
f = function(x, den) {paste0(x, "/", den)}
Cl_in_net <- as.data.frame(intersect(network$gene, CL$gene))
HOC_in_net <- as.data.frame(intersect(network$gene, HOC$gene))
BDO_in_net <- as.data.frame(intersect(network$gene, breastDO$gene))
acsn_in_net <- as.data.frame(intersect(network$gene, acsn$V1))
# Find intersection between the network and each list
Cl_in_net <- as.data.frame(intersect(network$gene, CL$gene))
nrow(CL_in_net)
# Find intersection between the network and each list
Cl_in_net <- as.data.frame(intersect(network$gene, CL$gene))
nrow(Cl_in_net)
HOC_in_net <- as.data.frame(intersect(network$gene, HOC$gene))
nrow(HOC_in_net)
BDO_in_net <- as.data.frame(intersect(network$gene, breastDO$gene))
nrow(BDO_in_net)
acsn_in_net <- as.data.frame(intersect(network$gene, acsn$V1))
nrow(acsn_in_net)
# Find intersection between the network and each list
Cl_in_net <- as.data.frame(intersect(network$gene, CL$gene))
nrow(Cl_in_net)
HOC_in_net <- as.data.frame(intersect(network$gene, HOC$gene))
nrow(HOC_in_net)
BDO_in_net <- as.data.frame(intersect(network$gene, breastDO$gene))
nrow(BDO_in_net)
acsn_in_net <- as.data.frame(intersect(network$gene, acsn$gene))
nrow(acsn_in_net)
137/227
