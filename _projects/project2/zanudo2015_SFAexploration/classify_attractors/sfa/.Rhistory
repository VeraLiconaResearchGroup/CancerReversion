library(RColorBrewer)
head(PlantGrowth)
plants <- unstack(PlantGrowth)
head(plants)
dim(PlantGrowth)
dim(plants)
# R code goes here.
t.test(plants$ctrl, plants$trt1)
t.test(plants$trt1, plants$trt2)
?t.test
t.test(plants$trt1, plants$trt2, conf.level = 0.001)
t.test(plants$trt1, plants$trt2)
# R code goes here.
cor.test(cars$speed, cars$dist)
plot( cars$dist, cars$speed, main = "Speed vs Stopping Distance", xlab = "Stopping Distance", ylab= "Speed")
library(MASS) # load the MASS library to make the data set available
head(cabbages)
# R code goes here.
fit <- lm(cabbages$VitC ~ cabbages$HeadWt+cabbages$Cult)
summary(fit)
lm(cabbages$VitC ~ cabbages$HeadWt+cabbages$Cult)
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() + ggtitle('Car speed versus stopping distance')
library(ggplot2) # load the ggplot2 library
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() + ggtitle('Car speed versus stopping distance')
head(cars)
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() +
ggtitle('Car speed versus stopping distance') +
xlab('Distance')+
ylab("Speed")
head(cars)
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() +
ggtitle('Car speed versus stopping distance') +
xlab('Distance')+
ylab("Speed") +
theme_bw()
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() +
ggtitle('Car speed versus stopping distance') +
xlab('Distance')+
ylab("Speed") +
theme_bw()+ theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() +
ggtitle('Car speed versus stopping distance') +
xlab('Distance')+ ylab("Speed") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
# R code goes here.
ggplot(data = cars, aes(x = dist, y = speed)) + geom_point() +
ggtitle('Car Speed Versus Stopping Distance') +
xlab('Distance') +
ylab("Speed") +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE, row.names = c(1,2))
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE, row.names = c(1,2))
setwd("/Volumes/GoogleDrive/My Drive/ALS_IPS/zanudo2015/sfa_fixednodes/DAC")
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE, row.names = c(1,2))
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE, row.names = 1)
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE, row.names = 2)
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE)
head(DAC)
DAC <- DAC[,-c(1,2)]
head(DAC)
RON_0 <- c('fasl','fast', 'gzmb', 'ifngt', 'nfkb', 'pi3k', 'tpl2', 'tradd')
DAC[,RON_0]
df <- DAC[,RON_0]
barplot(df$fasl)
hist(df$fasl)
for(name in names(df)){
hist(df[,name], main = name)
}
hist(df[,name], main = name, labels = TRUE)
?hist
hist(df[,name], main = name, labels = TRUE, freq = FALSE, breaks = 3)
for(name in names(df)){
hist(df[,name], main = name, labels = TRUE, freq = FALSE, breaks = 2)
}
hist(df[,name], main = name, labels = TRUE, freq = FALSE, breaks = 3)
for(name in names(df)){
hist(df[,name], main = name, labels = TRUE, freq = FALSE, breaks = 3)
}
hist(df[,name], main = name, labels = TRUE, breaks = 3)
?hist
hist(df[,name], main = name, labels = TRUE, breaks = 3, offset = .5)
pdf('RON0_dist.pdf')
for(name in names(df)){
hist(df[,name], main = name, labels = TRUE, breaks = 3, offset = .5)
}
dev.off()
pdf('RON0_dist.pdf')
for(name in names(df)){
hist(df[,name], main = name, labels = TRUE, breaks = 3)
}
dev.off()
summary(hist%fasl)
summary(df$fasl)
table(df$fasl)
typeof(table(df$fasl))
t <- table(df$fasl)
t/sum(t)
t/sum(t)*100
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,fasl])
lab <- as.character(t/sum(t)*100)
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(t/sum(t)*100)
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
lab <- as.character(t/sum(t)*100)
lab <- c(lab[1], '0', '0', lab[2])
lab
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(t/sum(t)*100)
lab <- c(lab[1], '0', '0', lab[2])
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
lab <- c(lab[1], '0', '0', lab[2])
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
lab <- c(lab[1], '0', '0', lab[2])
lab <- paste(lab, "%")
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
len(t)
length(t)
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if( length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
hist(df[,name], main = name, labels = lab, breaks = 3)
}
dev.off()
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
print(lab)
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
hist(df[,name], main = name, labels = lab, breaks = 3)
}
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = lab, breaks = 3)
}
pdf('RON0_dist.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = labs, breaks = 3)
}
dev.off()
library(tidyverse)
dim(L1)
L1 <- read.table("DAC_A_L1_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
dim(L1)
distinct(L1)
dim(distinct(L1))
L1_unique <- distinct(L1)
L2 <- read.table("DAC_A_L2_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE)
DAC <- DAC[,-c(1,2)]
RON_0 <- c('fasl','fast', 'gzmb', 'ifngt', 'nfkb', 'pi3k', 'tpl2', 'tradd')
df <- DAC[,RON_0]
pdf('RON0_dist_L1.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = labs, breaks = 3)
}
dev.off()
DAC <- read.table("DAC_A_L2_rons.txt", header = TRUE)
DAC <- DAC[,-c(1,2)]
RON_0 <- c('fasl','fast', 'gzmb', 'ifngt', 'nfkb', 'pi3k', 'tpl2', 'tradd')
df <- DAC[,RON_0]
pdf('RON0_dist_L2.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = labs, breaks = 3)
}
dev.off()
hist(df[,name], main = name, labels = labs, breaks = 3, xlab = 'DAC')
pdf('RON0_dist_L2.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = labs, breaks = 3, xlab = 'DAC')
}
dev.off()
DAC <- read.table("DAC_A_L1_rons.txt", header = TRUE)
DAC <- DAC[,-c(1,2)]
RON_0 <- c('fasl','fast', 'gzmb', 'ifngt', 'nfkb', 'pi3k', 'tpl2', 'tradd')
df <- DAC[,RON_0]
pdf('RON0_dist_L1.pdf')
for(name in names(df)){
t <- table(df[,name])
lab <- as.character(round(t/sum(t)*100,2))
labs <- c(lab[1], '0', '0', lab[2])
if(length(t) == 1) labs <- lab[1]
labs <- paste(labs, "%")
print(labs)
hist(df[,name], main = name, labels = labs, breaks = 3, xlab = 'DAC')
}
dev.off()
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
dim(L2_unique)[1]
dim(L2)[1]
L1 <- read.table("../DAC_results_L1A/DAC_all.txt", header = TRUE)
getwd()
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
dim(L1)
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
L1_unique <- distinct(L1)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
L2 <- read.table("DAC_A_L2_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
L2 <- read.table("../../DAC_results_L2A/DAC_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
L1_unique <- distinct(L1)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
L2 <- read.table("../../DAC_results_L2A/DAC_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
L1_unique <- distinct(L1)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
L2 <- read.table("../../DAC_results_L2A/DAC_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
# Compare DAC of attractors resulting from fixed nodes to see how many are unique
L1 <- read.table("DAC_A_L1_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
L1_unique <- distinct(L1)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
L2 <- read.table("DAC_A_L2_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
# Compare DAC of attractors resulting from fixed nodes to see how many are unique
L1 <- read.table("../../DAC_results_L1A/DAC_all.txt", header = TRUE)
L1 <- L1[,-c(1,2)]
L1_unique <- distinct(L1)
#Number of replicates:
dim(L1)[1] - dim(L1_unique)[1]
#percent of replicates:
(dim(L1)[1] - dim(L1_unique)[1])/dim(L1)[1]*100
L2 <- read.table("../../DAC_results_L2A/DAC_all.txt", header = TRUE)
L2 <- L2[,-c(1,2)]
L2_unique <- distinct(L2)
#Number of replicates:
dim(L2)[1] - dim(L2_unique)[1]
#percent of replicates:
(dim(L2)[1] - dim(L2_unique)[1])/dim(L2)[1]*100
setwd("./") # Change WD
library(tidyverse)
DACL <- scan('leukemia_DAC.txt')
DACL <- scan('leukemia_DAC.txt')
setwd("./") # Change WD
.libPaths("~/R_libs")
library(tidyverse)
DACL <- scan('leukemia_DAC.txt')
getwd()
setwd("/Volumes/GoogleDrive/My Drive/ALS_IPS/zanudo2015/classify_attractors/sfa")
setwd("/Volumes/GoogleDrive/My Drive/ALS_IPS/zanudo2015/classify_attractors/sfa")
library(tidyverse)
DACL <- scan('leukemia_DAC.txt')
?scan
DACL <- scan('leukemia_DAC.txt', what = cahracter)
DACL <- scan('leukemia_DAC.txt', what = character)
DACL <- scan('leukemia_DAC.txt', what = character())
DACL
DACA <- scan('apoptosis_DAC.txt', what = character())
kmeansA <- scan('kmeans_ss_11_apoptosis', what = character())
DACL <- scan('leukemia_DAC.txt', what = character())
kmeansL <- scan('kmeans_ss_11_leukemia', what = character())
inteersect(DACL, kmeansL)
intersect(DACL, kmeansL)
length(intersect(DACL, kmeansL))
length(intersect(DACA, kmeansA))
length(intersect(DACL, kmeansL))/DACL
length(intersect(DACL, kmeansL))/length(DACL)
length(intersect(DACL, kmeansL))/length(DACL)*100
length(intersect(DACA, kmeansA))/length(DACA)*100
data <- read.table("../classify_attractors/sfa/sfa_logss.txt", header = TRUE, row.names = 1)
data <- read.table("sfa_logss.txt", header = TRUE, row.names = 1)
disc <- function(x){
  if(x >0){
    x = 1
  }else if(x ==0){
    x = 0
  }else{
    x = -1
  }
  return(x)
}
data <- data %>% apply(c(1,2), disc) %>% as.data.frame()
library(tidyverse)
data <- data %>% apply(c(1,2), disc) %>% as.data.frame()
data2 <- data %>% distinct() %>%  as.matrix()
library(e1070)
library(e1071)
ham <- hamming.distance(data2)
cd ~
touch .Renviron
open .Renviron
quit()
